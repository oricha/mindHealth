plugins {
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'java'
    id 'com.github.node-gradle.node' version '7.1.0'
}

group = 'com.mindhealth'
version = '0.0.1-SNAPSHOT'

java.sourceCompatibility = '21'

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    runtimeOnly('com.h2database:h2')
    implementation('io.github.wimdeblauwe:error-handling-spring-boot-starter:4.5.0')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')
    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5')
    developmentOnly('org.springframework.boot:spring-boot-docker-compose')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

}

node {
    download.set(true)
    version.set('22.14.0')
}

task npmRunBuild(type: NpmTask) {
    args = ['run', 'build']
    dependsOn npmInstall

    inputs.files(fileTree('node_modules'))
    inputs.files(fileTree('src/main/resources'))
    inputs.file('package.json')
    inputs.file('tsconfig.json')
    inputs.file('webpack.config.js')
    outputs.dir(layout.buildDirectory.dir('resources/main/static'))
}

processResources {
    dependsOn npmRunBuild
}

tasks.withType(Test) {
    useJUnitPlatform()
}
