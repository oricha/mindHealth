plugins {
    id 'org.springframework.boot' version '3.4.3'
    id 'java'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '7.1.0'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.mindhealth'
version = '0.0.1-SNAPSHOT'

java.sourceCompatibility = '21'

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

springBoot {
    mainClass = 'com.mindhealth.mindhealth.MindHealthApplication'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.4.3'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'
    implementation 'org.postgresql:postgresql:42.7.4'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.773'
    implementation 'org.projectlombok:lombok:1.18.36'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.4.3'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.3'
    testImplementation 'org.testcontainers:postgresql:1.20.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.2'
}

node {
    download.set(true)
    version.set('22.14.0')
}

tasks.register('npmRunBuild', NpmTask) {
    args = ['run', 'build']
    dependsOn npmInstall

    inputs.files(fileTree('node_modules'))
    inputs.files(fileTree('src/main/resources'))
    inputs.file('package.json')
    inputs.file('tsconfig.json')
    inputs.file('webpack.config.js')
    outputs.dir(layout.buildDirectory.dir('resources/main/static'))
}

processResources {
    dependsOn npmRunBuild
}

tasks.withType(Test) {
    useJUnitPlatform()
}

tasks.named('resolveMainClassName').configure {
    enabled = false
}